<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.3</version>
    <relativePath />
  </parent>
  <groupId>org.folio</groupId>
  <artifactId>mod-inn-reach</artifactId>
  <version>3.5.0-SNAPSHOT</version>
  <name>mod-inn-reach</name>
  <description>Access to INN-Reach service</description>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>http://spdx.org/licenses/Apache-2.0</url>
    </license>
  </licenses>

  <properties>
    <!-- runtime dependencies -->
    <folio-service-tools.version>5.1.0-SNAPSHOT</folio-service-tools.version>
    <folio-spring.version>10.0.0-SNAPSHOT</folio-spring.version>
    <commons-collections4.version>4.5.0</commons-collections4.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <lombok.mapstruct-binding.version>0.2.0</lombok.mapstruct-binding.version>
    <marc4j.version>2.9.6</marc4j.version>
    <coffee-boots.version>4.0.0</coffee-boots.version>

    <!-- test dependencies -->
    <wiremock-standalone.version>3.12.1</wiremock-standalone.version>
    <awaitility.version>4.2.2</awaitility.version>
    <junit-extensions.version>2.6.0</junit-extensions.version>
    <easy-random.version>5.0.0</easy-random.version>
    <micrometer.version>1.15.1</micrometer.version>
    <log4j2.version>2.19.0</log4j2.version>

    <!-- plugins -->
    <openapi-generator.version>7.14.0</openapi-generator.version>
    <copy-rename-maven-plugin.version>1.0.1</copy-rename-maven-plugin.version>
    <folio-module-descriptor-validator.version>1.0.1</folio-module-descriptor-validator.version>
    <build-helper-maven-plugin.version>3.6.1</build-helper-maven-plugin.version>
    <maven-surefire-plugin.version>3.5.3</maven-surefire-plugin.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>

    <!-- other properties -->
    <java.version>21</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <openapi.settings.file>${project.basedir}/src/main/resources/swagger.api/settings.yaml</openapi.settings.file>
    <openapi.contribution.file>${project.basedir}/src/main/resources/swagger.api/contribution.yaml</openapi.contribution.file>
    <openapi.circulation.file>${project.basedir}/src/main/resources/swagger.api/circulation.yaml</openapi.circulation.file>
    <argLine />
    <sonar.exclusions>
      src/main/java/org/folio/innreach/controller/TenantController.java,
      src/main/java/org/folio/innreach/ModInnReachApplication.java,
      src/main/java/org/folio/innreach/domain/entity/**,
      src/main/java/org/folio/innreach/domain/dto/**,
      src/main/java/org/folio/innreach/domain/exception/**,
      src/main/java/org/folio/innreach/repository/**,
      src/main/java/org/folio/innreach/external/dto/**,
      src/main/java/org/folio/innreach/rest/**
    </sonar.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-service-tools-spring-dev</artifactId>
      <version>${folio-service-tools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-base</artifactId>
      <version>${folio-spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-system-user</artifactId>
      <version>${folio-spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.micrometer</groupId>
          <artifactId>micrometer-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>${commons-collections4.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.stepio.coffee-boots</groupId>
      <artifactId>coffee-boots</artifactId>
      <version>${coffee-boots.version}</version>
    </dependency>
    <dependency>
      <groupId>org.marc4j</groupId>
      <artifactId>marc4j</artifactId>
      <version>${marc4j.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jeasy</groupId>
      <artifactId>easy-random-core</artifactId>
      <version>${easy-random.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${wiremock-standalone.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitility.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.github.glytching</groupId>
      <artifactId>junit-extensions</artifactId>
      <version>${junit-extensions.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>${micrometer.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>filter-descriptor-inputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/descriptors</directory>
                  <include>*Descriptor*-template.json</include>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>${copy-rename-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>rename-descriptor-outputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>rename</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/ModuleDescriptor.json</destinationFile>
                </fileSet>
                <fileSet>
                  <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/DeploymentDescriptor.json</destinationFile>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator.version}</version>
        <executions>
          <execution>
            <id>settings</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${openapi.settings.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.innreach.dto</modelPackage>
              <apiPackage>${project.groupId}.innreach.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
              <inlineSchemaNameDefaults>arrayItemSuffix=</inlineSchemaNameDefaults>
              <configOptions>
                <java8>true</java8>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
                <useTags>true</useTags>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>contribution</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${openapi.contribution.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.innreach.dto</modelPackage>
              <apiPackage>${project.groupId}.innreach.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
              <inlineSchemaNameDefaults>arrayItemSuffix=</inlineSchemaNameDefaults>
              <configOptions>
                <java8>true</java8>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
                <useTags>true</useTags>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>circulation</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${openapi.circulation.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.innreach.dto</modelPackage>
              <apiPackage>${project.groupId}.innreach.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
              <inlineSchemaNameDefaults>arrayItemSuffix=</inlineSchemaNameDefaults>
              <configOptions>
                <java8>true</java8>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
                <useTags>true</useTags>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
          <argLine>@{argLine} -Dfile.encoding=UTF-8</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <preparationGoals>clean verify</preparationGoals>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.1.1</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.folio</groupId>
        <artifactId>folio-module-descriptor-validator</artifactId>
        <version>${folio-module-descriptor-validator.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>${java.version}</release>
          <compilerArgument>-proc:full</compilerArgument>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok-mapstruct-binding</artifactId>
              <version>${lombok.mapstruct-binding.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <scm>
    <url>https://github.com/folio-org/${project.artifactId}</url>
    <connection>scm:git:git://github.com/folio-org/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/${project.artifactId}.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven Repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Release Repository</name>
      <url>https://repository.folio.org/repository/maven-releases/</url>
      <uniqueVersion>false</uniqueVersion>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

</project>
